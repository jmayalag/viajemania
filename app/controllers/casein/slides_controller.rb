# Scaffolding generated by Casein v5.1.1.5

module Casein
  class SlidesController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Slides'
  		@slides = Slide.order(sort_order(:nombre)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View slide'
      @slide = Slide.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new slide'
    	@slide = Slide.new
    end

    def create
      @slide = Slide.new slide_params
    
      if @slide.save
        flash[:notice] = 'Slide created'
        redirect_to casein_slides_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new slide'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update slide'
      
      @slide = Slide.find params[:id]
    
      if @slide.update_attributes slide_params
        flash[:notice] = 'Slide has been updated'
        redirect_to casein_slides_path
      else
        flash.now[:warning] = 'There were problems when trying to update this slide'
        render :action => :show
      end
    end
 
    def destroy
      @slide = Slide.find params[:id]

      @slide.destroy
      flash[:notice] = 'Slide has been deleted'
      redirect_to casein_slides_path
    end
  
    private
      
      def slide_params
        params.require(:slide).permit(:nombre, :imagen, :subtitulo)
      end

  end
end